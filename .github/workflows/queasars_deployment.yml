# This workflow runs on protected version tags. It runs the CI, checks the tag version
# for consistency with the pyproject.toml and then deploys to PYPI and GitHub pages.

name: QUEASARS Deployment

on:
  # Runs only on protected tags of the form vX.Y.Z
  push:
    tags: ['v[0-9].[0-9]'] #FIXME: Make protected again after debugging.
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Version of the release in the form: vX.Y.Z'
        type: string

jobs:

  Check_Version_Consistency:
    runs-on: ubuntu-latest
    steps:
      - if: ${{ inputs.version != '' }}
        name: Check workflow version input
        shell: bash
        run: |
          if [[ $inputs.version != @(v[0-9].[0-9]) ]]; then exit 1; fi
          echo "version=${inputs.version:1}" >> $GITHUB_ENV
      - if: ${{ inputs.version == '' }}
        name: Get tag version
        shell: bash
        env:
          TAG_NAME: ${{ github.ref_name }}
        run: |
          echo "version=${TAG_NAME:1}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipx
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
      - name: Install poetry
        run: |
          pipx install poetry==1.7.0
      - name: Install dependencies
        run: |
          poetry install
      - name: Check tag / input version consistency with pyproject.toml
        shell: bash
        run: |
          echo $version
          toml_version=$(poetry version --short)
          echo $toml_version
          if [[ $version != $toml_version ]]; then exit 1; fi

  #Run_CI:
  #  uses: ./.github/workflows/queasars_ci.yml

  #Deploy_Documentation:
  #  uses: ./.github/workflows/queasars_deploy_documentation.yml