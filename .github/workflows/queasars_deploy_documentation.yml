name: Deploy QUEASARS sphinx documentation

on:
  # Runs on pushes targeting the default branch
  push:
    tags: [] #['v[0-9].[0-9]+.[0-9]+']
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install pipx
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
      - name: Install poetry
        run: |
          pipx install poetry==1.7.0
      - name: Install dependencies
        run: |
          poetry install --with docs
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build Sphinx documentation
        run: |
          cd docs
          poetry run make clean
          poetry run make html
          cd ..
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v2
        with:
          path: "docs/build"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2